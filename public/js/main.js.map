{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module', './util'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module, require('./util'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod, global.Util);\n    global.alert = mod.exports;\n  }\n})(this, function (exports, module, _util) {\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var _Util = _interopRequireDefault(_util);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.0.0-alpha.2): alert.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Alert = (function ($) {\n\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n\n    var NAME = 'alert';\n    var VERSION = '4.0.0-alpha';\n    var DATA_KEY = 'bs.alert';\n    var EVENT_KEY = '.' + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $.fn[NAME];\n    var TRANSITION_DURATION = 150;\n\n    var Selector = {\n      DISMISS: '[data-dismiss=\"alert\"]'\n    };\n\n    var Event = {\n      CLOSE: 'close' + EVENT_KEY,\n      CLOSED: 'closed' + EVENT_KEY,\n      CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n    };\n\n    var ClassName = {\n      ALERT: 'alert',\n      FADE: 'fade',\n      IN: 'in'\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * Class Definition\n     * ------------------------------------------------------------------------\n     */\n\n    var Alert = (function () {\n      function Alert(element) {\n        _classCallCheck(this, Alert);\n\n        this._element = element;\n      }\n\n      /**\n       * ------------------------------------------------------------------------\n       * Data Api implementation\n       * ------------------------------------------------------------------------\n       */\n\n      // getters\n\n      _createClass(Alert, [{\n        key: 'close',\n\n        // public\n\n        value: function close(element) {\n          element = element || this._element;\n\n          var rootElement = this._getRootElement(element);\n          var customEvent = this._triggerCloseEvent(rootElement);\n\n          if (customEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          this._removeElement(rootElement);\n        }\n      }, {\n        key: 'dispose',\n        value: function dispose() {\n          $.removeData(this._element, DATA_KEY);\n          this._element = null;\n        }\n\n        // private\n\n      }, {\n        key: '_getRootElement',\n        value: function _getRootElement(element) {\n          var selector = _Util['default'].getSelectorFromElement(element);\n          var parent = false;\n\n          if (selector) {\n            parent = $(selector)[0];\n          }\n\n          if (!parent) {\n            parent = $(element).closest('.' + ClassName.ALERT)[0];\n          }\n\n          return parent;\n        }\n      }, {\n        key: '_triggerCloseEvent',\n        value: function _triggerCloseEvent(element) {\n          var closeEvent = $.Event(Event.CLOSE);\n\n          $(element).trigger(closeEvent);\n          return closeEvent;\n        }\n      }, {\n        key: '_removeElement',\n        value: function _removeElement(element) {\n          $(element).removeClass(ClassName.IN);\n\n          if (!_Util['default'].supportsTransitionEnd() || !$(element).hasClass(ClassName.FADE)) {\n            this._destroyElement(element);\n            return;\n          }\n\n          $(element).one(_Util['default'].TRANSITION_END, $.proxy(this._destroyElement, this, element)).emulateTransitionEnd(TRANSITION_DURATION);\n        }\n      }, {\n        key: '_destroyElement',\n        value: function _destroyElement(element) {\n          $(element).detach().trigger(Event.CLOSED).remove();\n        }\n\n        // static\n\n      }], [{\n        key: '_jQueryInterface',\n        value: function _jQueryInterface(config) {\n          return this.each(function () {\n            var $element = $(this);\n            var data = $element.data(DATA_KEY);\n\n            if (!data) {\n              data = new Alert(this);\n              $element.data(DATA_KEY, data);\n            }\n\n            if (config === 'close') {\n              data[config](this);\n            }\n          });\n        }\n      }, {\n        key: '_handleDismiss',\n        value: function _handleDismiss(alertInstance) {\n          return function (event) {\n            if (event) {\n              event.preventDefault();\n            }\n\n            alertInstance.close(this);\n          };\n        }\n      }, {\n        key: 'VERSION',\n        get: function get() {\n          return VERSION;\n        }\n      }]);\n\n      return Alert;\n    })();\n\n    $(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $.fn[NAME] = Alert._jQueryInterface;\n    $.fn[NAME].Constructor = Alert;\n    $.fn[NAME].noConflict = function () {\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Alert._jQueryInterface;\n    };\n\n    return Alert;\n  })(jQuery);\n\n  module.exports = Alert;\n});\n\n},{\"./util\":8}],2:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod);\n    global.button = mod.exports;\n  }\n})(this, function (exports, module) {\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.0.0-alpha.2): button.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var Button = (function ($) {\n\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n\n    var NAME = 'button';\n    var VERSION = '4.0.0-alpha';\n    var DATA_KEY = 'bs.button';\n    var EVENT_KEY = '.' + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $.fn[NAME];\n\n    var ClassName = {\n      ACTIVE: 'active',\n      BUTTON: 'btn',\n      FOCUS: 'focus'\n    };\n\n    var Selector = {\n      DATA_TOGGLE_CARROT: '[data-toggle^=\"button\"]',\n      DATA_TOGGLE: '[data-toggle=\"buttons\"]',\n      INPUT: 'input',\n      ACTIVE: '.active',\n      BUTTON: '.btn'\n    };\n\n    var Event = {\n      CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,\n      FOCUS_BLUR_DATA_API: 'focus' + EVENT_KEY + DATA_API_KEY + ' ' + ('blur' + EVENT_KEY + DATA_API_KEY)\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * Class Definition\n     * ------------------------------------------------------------------------\n     */\n\n    var Button = (function () {\n      function Button(element) {\n        _classCallCheck(this, Button);\n\n        this._element = element;\n      }\n\n      /**\n       * ------------------------------------------------------------------------\n       * Data Api implementation\n       * ------------------------------------------------------------------------\n       */\n\n      // getters\n\n      _createClass(Button, [{\n        key: 'toggle',\n\n        // public\n\n        value: function toggle() {\n          var triggerChangeEvent = true;\n          var rootElement = $(this._element).closest(Selector.DATA_TOGGLE)[0];\n\n          if (rootElement) {\n            var input = $(this._element).find(Selector.INPUT)[0];\n\n            if (input) {\n              if (input.type === 'radio') {\n                if (input.checked && $(this._element).hasClass(ClassName.ACTIVE)) {\n                  triggerChangeEvent = false;\n                } else {\n                  var activeElement = $(rootElement).find(Selector.ACTIVE)[0];\n\n                  if (activeElement) {\n                    $(activeElement).removeClass(ClassName.ACTIVE);\n                  }\n                }\n              }\n\n              if (triggerChangeEvent) {\n                input.checked = !$(this._element).hasClass(ClassName.ACTIVE);\n                $(this._element).trigger('change');\n              }\n            }\n          } else {\n            this._element.setAttribute('aria-pressed', !$(this._element).hasClass(ClassName.ACTIVE));\n          }\n\n          if (triggerChangeEvent) {\n            $(this._element).toggleClass(ClassName.ACTIVE);\n          }\n        }\n      }, {\n        key: 'dispose',\n        value: function dispose() {\n          $.removeData(this._element, DATA_KEY);\n          this._element = null;\n        }\n\n        // static\n\n      }], [{\n        key: '_jQueryInterface',\n        value: function _jQueryInterface(config) {\n          return this.each(function () {\n            var data = $(this).data(DATA_KEY);\n\n            if (!data) {\n              data = new Button(this);\n              $(this).data(DATA_KEY, data);\n            }\n\n            if (config === 'toggle') {\n              data[config]();\n            }\n          });\n        }\n      }, {\n        key: 'VERSION',\n        get: function get() {\n          return VERSION;\n        }\n      }]);\n\n      return Button;\n    })();\n\n    $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\n      event.preventDefault();\n\n      var button = event.target;\n\n      if (!$(button).hasClass(ClassName.BUTTON)) {\n        button = $(button).closest(Selector.BUTTON);\n      }\n\n      Button._jQueryInterface.call($(button), 'toggle');\n    }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\n      var button = $(event.target).closest(Selector.BUTTON)[0];\n      $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));\n    });\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $.fn[NAME] = Button._jQueryInterface;\n    $.fn[NAME].Constructor = Button;\n    $.fn[NAME].noConflict = function () {\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Button._jQueryInterface;\n    };\n\n    return Button;\n  })(jQuery);\n\n  module.exports = Button;\n});\n\n},{}],3:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module', './util'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module, require('./util'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod, global.Util);\n    global.collapse = mod.exports;\n  }\n})(this, function (exports, module, _util) {\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var _Util = _interopRequireDefault(_util);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.0.0-alpha.2): collapse.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Collapse = (function ($) {\n\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n\n    var NAME = 'collapse';\n    var VERSION = '4.0.0-alpha';\n    var DATA_KEY = 'bs.collapse';\n    var EVENT_KEY = '.' + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $.fn[NAME];\n    var TRANSITION_DURATION = 600;\n\n    var Default = {\n      toggle: true,\n      parent: ''\n    };\n\n    var DefaultType = {\n      toggle: 'boolean',\n      parent: 'string'\n    };\n\n    var Event = {\n      SHOW: 'show' + EVENT_KEY,\n      SHOWN: 'shown' + EVENT_KEY,\n      HIDE: 'hide' + EVENT_KEY,\n      HIDDEN: 'hidden' + EVENT_KEY,\n      CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n    };\n\n    var ClassName = {\n      IN: 'in',\n      COLLAPSE: 'collapse',\n      COLLAPSING: 'collapsing',\n      COLLAPSED: 'collapsed'\n    };\n\n    var Dimension = {\n      WIDTH: 'width',\n      HEIGHT: 'height'\n    };\n\n    var Selector = {\n      ACTIVES: '.panel > .in, .panel > .collapsing',\n      DATA_TOGGLE: '[data-toggle=\"collapse\"]'\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * Class Definition\n     * ------------------------------------------------------------------------\n     */\n\n    var Collapse = (function () {\n      function Collapse(element, config) {\n        _classCallCheck(this, Collapse);\n\n        this._isTransitioning = false;\n        this._element = element;\n        this._config = this._getConfig(config);\n        this._triggerArray = $.makeArray($('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' + ('[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')));\n\n        this._parent = this._config.parent ? this._getParent() : null;\n\n        if (!this._config.parent) {\n          this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n        }\n\n        if (this._config.toggle) {\n          this.toggle();\n        }\n      }\n\n      /**\n       * ------------------------------------------------------------------------\n       * Data Api implementation\n       * ------------------------------------------------------------------------\n       */\n\n      // getters\n\n      _createClass(Collapse, [{\n        key: 'toggle',\n\n        // public\n\n        value: function toggle() {\n          if ($(this._element).hasClass(ClassName.IN)) {\n            this.hide();\n          } else {\n            this.show();\n          }\n        }\n      }, {\n        key: 'show',\n        value: function show() {\n          var _this = this;\n\n          if (this._isTransitioning || $(this._element).hasClass(ClassName.IN)) {\n            return;\n          }\n\n          var actives = undefined;\n          var activesData = undefined;\n\n          if (this._parent) {\n            actives = $.makeArray($(Selector.ACTIVES));\n            if (!actives.length) {\n              actives = null;\n            }\n          }\n\n          if (actives) {\n            activesData = $(actives).data(DATA_KEY);\n            if (activesData && activesData._isTransitioning) {\n              return;\n            }\n          }\n\n          var startEvent = $.Event(Event.SHOW);\n          $(this._element).trigger(startEvent);\n          if (startEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          if (actives) {\n            Collapse._jQueryInterface.call($(actives), 'hide');\n            if (!activesData) {\n              $(actives).data(DATA_KEY, null);\n            }\n          }\n\n          var dimension = this._getDimension();\n\n          $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);\n\n          this._element.style[dimension] = 0;\n          this._element.setAttribute('aria-expanded', true);\n\n          if (this._triggerArray.length) {\n            $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);\n          }\n\n          this.setTransitioning(true);\n\n          var complete = function complete() {\n            $(_this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.IN);\n\n            _this._element.style[dimension] = '';\n\n            _this.setTransitioning(false);\n\n            $(_this._element).trigger(Event.SHOWN);\n          };\n\n          if (!_Util['default'].supportsTransitionEnd()) {\n            complete();\n            return;\n          }\n\n          var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n          var scrollSize = 'scroll' + capitalizedDimension;\n\n          $(this._element).one(_Util['default'].TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n\n          this._element.style[dimension] = this._element[scrollSize] + 'px';\n        }\n      }, {\n        key: 'hide',\n        value: function hide() {\n          var _this2 = this;\n\n          if (this._isTransitioning || !$(this._element).hasClass(ClassName.IN)) {\n            return;\n          }\n\n          var startEvent = $.Event(Event.HIDE);\n          $(this._element).trigger(startEvent);\n          if (startEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          var dimension = this._getDimension();\n          var offsetDimension = dimension === Dimension.WIDTH ? 'offsetWidth' : 'offsetHeight';\n\n          this._element.style[dimension] = this._element[offsetDimension] + 'px';\n\n          _Util['default'].reflow(this._element);\n\n          $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.IN);\n\n          this._element.setAttribute('aria-expanded', false);\n\n          if (this._triggerArray.length) {\n            $(this._triggerArray).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);\n          }\n\n          this.setTransitioning(true);\n\n          var complete = function complete() {\n            _this2.setTransitioning(false);\n            $(_this2._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);\n          };\n\n          this._element.style[dimension] = 0;\n\n          if (!_Util['default'].supportsTransitionEnd()) {\n            complete();\n            return;\n          }\n\n          $(this._element).one(_Util['default'].TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n        }\n      }, {\n        key: 'setTransitioning',\n        value: function setTransitioning(isTransitioning) {\n          this._isTransitioning = isTransitioning;\n        }\n      }, {\n        key: 'dispose',\n        value: function dispose() {\n          $.removeData(this._element, DATA_KEY);\n\n          this._config = null;\n          this._parent = null;\n          this._element = null;\n          this._triggerArray = null;\n          this._isTransitioning = null;\n        }\n\n        // private\n\n      }, {\n        key: '_getConfig',\n        value: function _getConfig(config) {\n          config = $.extend({}, Default, config);\n          config.toggle = Boolean(config.toggle); // coerce string values\n          _Util['default'].typeCheckConfig(NAME, config, DefaultType);\n          return config;\n        }\n      }, {\n        key: '_getDimension',\n        value: function _getDimension() {\n          var hasWidth = $(this._element).hasClass(Dimension.WIDTH);\n          return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;\n        }\n      }, {\n        key: '_getParent',\n        value: function _getParent() {\n          var _this3 = this;\n\n          var parent = $(this._config.parent)[0];\n          var selector = '[data-toggle=\"collapse\"][data-parent=\"' + this._config.parent + '\"]';\n\n          $(parent).find(selector).each(function (i, element) {\n            _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\n          });\n\n          return parent;\n        }\n      }, {\n        key: '_addAriaAndCollapsedClass',\n        value: function _addAriaAndCollapsedClass(element, triggerArray) {\n          if (element) {\n            var isOpen = $(element).hasClass(ClassName.IN);\n            element.setAttribute('aria-expanded', isOpen);\n\n            if (triggerArray.length) {\n              $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\n            }\n          }\n        }\n\n        // static\n\n      }], [{\n        key: '_getTargetFromElement',\n        value: function _getTargetFromElement(element) {\n          var selector = _Util['default'].getSelectorFromElement(element);\n          return selector ? $(selector)[0] : null;\n        }\n      }, {\n        key: '_jQueryInterface',\n        value: function _jQueryInterface(config) {\n          return this.each(function () {\n            var $this = $(this);\n            var data = $this.data(DATA_KEY);\n            var _config = $.extend({}, Default, $this.data(), typeof config === 'object' && config);\n\n            if (!data && _config.toggle && /show|hide/.test(config)) {\n              _config.toggle = false;\n            }\n\n            if (!data) {\n              data = new Collapse(this, _config);\n              $this.data(DATA_KEY, data);\n            }\n\n            if (typeof config === 'string') {\n              if (data[config] === undefined) {\n                throw new Error('No method named \"' + config + '\"');\n              }\n              data[config]();\n            }\n          });\n        }\n      }, {\n        key: 'VERSION',\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: 'Default',\n        get: function get() {\n          return Default;\n        }\n      }]);\n\n      return Collapse;\n    })();\n\n    $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n      event.preventDefault();\n\n      var target = Collapse._getTargetFromElement(this);\n      var data = $(target).data(DATA_KEY);\n      var config = data ? 'toggle' : $(this).data();\n\n      Collapse._jQueryInterface.call($(target), config);\n    });\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $.fn[NAME] = Collapse._jQueryInterface;\n    $.fn[NAME].Constructor = Collapse;\n    $.fn[NAME].noConflict = function () {\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Collapse._jQueryInterface;\n    };\n\n    return Collapse;\n  })(jQuery);\n\n  module.exports = Collapse;\n});\n\n},{\"./util\":8}],4:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module', './util'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module, require('./util'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod, global.Util);\n    global.dropdown = mod.exports;\n  }\n})(this, function (exports, module, _util) {\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var _Util = _interopRequireDefault(_util);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.0.0-alpha.2): dropdown.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Dropdown = (function ($) {\n\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n\n    var NAME = 'dropdown';\n    var VERSION = '4.0.0-alpha';\n    var DATA_KEY = 'bs.dropdown';\n    var EVENT_KEY = '.' + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $.fn[NAME];\n\n    var Event = {\n      HIDE: 'hide' + EVENT_KEY,\n      HIDDEN: 'hidden' + EVENT_KEY,\n      SHOW: 'show' + EVENT_KEY,\n      SHOWN: 'shown' + EVENT_KEY,\n      CLICK: 'click' + EVENT_KEY,\n      CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,\n      KEYDOWN_DATA_API: 'keydown' + EVENT_KEY + DATA_API_KEY\n    };\n\n    var ClassName = {\n      BACKDROP: 'dropdown-backdrop',\n      DISABLED: 'disabled',\n      OPEN: 'open'\n    };\n\n    var Selector = {\n      BACKDROP: '.dropdown-backdrop',\n      DATA_TOGGLE: '[data-toggle=\"dropdown\"]',\n      FORM_CHILD: '.dropdown form',\n      ROLE_MENU: '[role=\"menu\"]',\n      ROLE_LISTBOX: '[role=\"listbox\"]',\n      NAVBAR_NAV: '.navbar-nav',\n      VISIBLE_ITEMS: '[role=\"menu\"] li:not(.disabled) a, ' + '[role=\"listbox\"] li:not(.disabled) a'\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * Class Definition\n     * ------------------------------------------------------------------------\n     */\n\n    var Dropdown = (function () {\n      function Dropdown(element) {\n        _classCallCheck(this, Dropdown);\n\n        this._element = element;\n\n        this._addEventListeners();\n      }\n\n      /**\n       * ------------------------------------------------------------------------\n       * Data Api implementation\n       * ------------------------------------------------------------------------\n       */\n\n      // getters\n\n      _createClass(Dropdown, [{\n        key: 'toggle',\n\n        // public\n\n        value: function toggle() {\n          if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\n            return false;\n          }\n\n          var parent = Dropdown._getParentFromElement(this);\n          var isActive = $(parent).hasClass(ClassName.OPEN);\n\n          Dropdown._clearMenus();\n\n          if (isActive) {\n            return false;\n          }\n\n          if ('ontouchstart' in document.documentElement && !$(parent).closest(Selector.NAVBAR_NAV).length) {\n\n            // if mobile we use a backdrop because click events don't delegate\n            var dropdown = document.createElement('div');\n            dropdown.className = ClassName.BACKDROP;\n            $(dropdown).insertBefore(this);\n            $(dropdown).on('click', Dropdown._clearMenus);\n          }\n\n          var relatedTarget = { relatedTarget: this };\n          var showEvent = $.Event(Event.SHOW, relatedTarget);\n\n          $(parent).trigger(showEvent);\n\n          if (showEvent.isDefaultPrevented()) {\n            return false;\n          }\n\n          this.focus();\n          this.setAttribute('aria-expanded', 'true');\n\n          $(parent).toggleClass(ClassName.OPEN);\n          $(parent).trigger($.Event(Event.SHOWN, relatedTarget));\n\n          return false;\n        }\n      }, {\n        key: 'dispose',\n        value: function dispose() {\n          $.removeData(this._element, DATA_KEY);\n          $(this._element).off(EVENT_KEY);\n          this._element = null;\n        }\n\n        // private\n\n      }, {\n        key: '_addEventListeners',\n        value: function _addEventListeners() {\n          $(this._element).on(Event.CLICK, this.toggle);\n        }\n\n        // static\n\n      }], [{\n        key: '_jQueryInterface',\n        value: function _jQueryInterface(config) {\n          return this.each(function () {\n            var data = $(this).data(DATA_KEY);\n\n            if (!data) {\n              $(this).data(DATA_KEY, data = new Dropdown(this));\n            }\n\n            if (typeof config === 'string') {\n              if (data[config] === undefined) {\n                throw new Error('No method named \"' + config + '\"');\n              }\n              data[config].call(this);\n            }\n          });\n        }\n      }, {\n        key: '_clearMenus',\n        value: function _clearMenus(event) {\n          if (event && event.which === 3) {\n            return;\n          }\n\n          var backdrop = $(Selector.BACKDROP)[0];\n          if (backdrop) {\n            backdrop.parentNode.removeChild(backdrop);\n          }\n\n          var toggles = $.makeArray($(Selector.DATA_TOGGLE));\n\n          for (var i = 0; i < toggles.length; i++) {\n            var _parent = Dropdown._getParentFromElement(toggles[i]);\n            var relatedTarget = { relatedTarget: toggles[i] };\n\n            if (!$(_parent).hasClass(ClassName.OPEN)) {\n              continue;\n            }\n\n            if (event && event.type === 'click' && /input|textarea/i.test(event.target.tagName) && $.contains(_parent, event.target)) {\n              continue;\n            }\n\n            var hideEvent = $.Event(Event.HIDE, relatedTarget);\n            $(_parent).trigger(hideEvent);\n            if (hideEvent.isDefaultPrevented()) {\n              continue;\n            }\n\n            toggles[i].setAttribute('aria-expanded', 'false');\n\n            $(_parent).removeClass(ClassName.OPEN).trigger($.Event(Event.HIDDEN, relatedTarget));\n          }\n        }\n      }, {\n        key: '_getParentFromElement',\n        value: function _getParentFromElement(element) {\n          var parent = undefined;\n          var selector = _Util['default'].getSelectorFromElement(element);\n\n          if (selector) {\n            parent = $(selector)[0];\n          }\n\n          return parent || element.parentNode;\n        }\n      }, {\n        key: '_dataApiKeydownHandler',\n        value: function _dataApiKeydownHandler(event) {\n          if (!/(38|40|27|32)/.test(event.which) || /input|textarea/i.test(event.target.tagName)) {\n            return;\n          }\n\n          event.preventDefault();\n          event.stopPropagation();\n\n          if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\n            return;\n          }\n\n          var parent = Dropdown._getParentFromElement(this);\n          var isActive = $(parent).hasClass(ClassName.OPEN);\n\n          if (!isActive && event.which !== 27 || isActive && event.which === 27) {\n\n            if (event.which === 27) {\n              var toggle = $(parent).find(Selector.DATA_TOGGLE)[0];\n              $(toggle).trigger('focus');\n            }\n\n            $(this).trigger('click');\n            return;\n          }\n\n          var items = $.makeArray($(Selector.VISIBLE_ITEMS));\n\n          items = items.filter(function (item) {\n            return item.offsetWidth || item.offsetHeight;\n          });\n\n          if (!items.length) {\n            return;\n          }\n\n          var index = items.indexOf(event.target);\n\n          if (event.which === 38 && index > 0) {\n            // up\n            index--;\n          }\n\n          if (event.which === 40 && index < items.length - 1) {\n            // down\n            index++;\n          }\n\n          if (! ~index) {\n            index = 0;\n          }\n\n          items[index].focus();\n        }\n      }, {\n        key: 'VERSION',\n        get: function get() {\n          return VERSION;\n        }\n      }]);\n\n      return Dropdown;\n    })();\n\n    $(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_MENU, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_LISTBOX, Dropdown._dataApiKeydownHandler).on(Event.CLICK_DATA_API, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, Dropdown.prototype.toggle).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, function (e) {\n      e.stopPropagation();\n    });\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $.fn[NAME] = Dropdown._jQueryInterface;\n    $.fn[NAME].Constructor = Dropdown;\n    $.fn[NAME].noConflict = function () {\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Dropdown._jQueryInterface;\n    };\n\n    return Dropdown;\n  })(jQuery);\n\n  module.exports = Dropdown;\n});\n\n},{\"./util\":8}],5:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module', './util'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module, require('./util'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod, global.Util);\n    global.modal = mod.exports;\n  }\n})(this, function (exports, module, _util) {\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var _Util = _interopRequireDefault(_util);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.0.0-alpha.2): modal.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Modal = (function ($) {\n\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n\n    var NAME = 'modal';\n    var VERSION = '4.0.0-alpha';\n    var DATA_KEY = 'bs.modal';\n    var EVENT_KEY = '.' + DATA_KEY;\n    var DATA_API_KEY = '.data-api';\n    var JQUERY_NO_CONFLICT = $.fn[NAME];\n    var TRANSITION_DURATION = 300;\n    var BACKDROP_TRANSITION_DURATION = 150;\n\n    var Default = {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: true\n    };\n\n    var DefaultType = {\n      backdrop: '(boolean|string)',\n      keyboard: 'boolean',\n      focus: 'boolean',\n      show: 'boolean'\n    };\n\n    var Event = {\n      HIDE: 'hide' + EVENT_KEY,\n      HIDDEN: 'hidden' + EVENT_KEY,\n      SHOW: 'show' + EVENT_KEY,\n      SHOWN: 'shown' + EVENT_KEY,\n      FOCUSIN: 'focusin' + EVENT_KEY,\n      RESIZE: 'resize' + EVENT_KEY,\n      CLICK_DISMISS: 'click.dismiss' + EVENT_KEY,\n      KEYDOWN_DISMISS: 'keydown.dismiss' + EVENT_KEY,\n      MOUSEUP_DISMISS: 'mouseup.dismiss' + EVENT_KEY,\n      MOUSEDOWN_DISMISS: 'mousedown.dismiss' + EVENT_KEY,\n      CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\n    };\n\n    var ClassName = {\n      SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n      BACKDROP: 'modal-backdrop',\n      OPEN: 'modal-open',\n      FADE: 'fade',\n      IN: 'in'\n    };\n\n    var Selector = {\n      DIALOG: '.modal-dialog',\n      DATA_TOGGLE: '[data-toggle=\"modal\"]',\n      DATA_DISMISS: '[data-dismiss=\"modal\"]',\n      FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * Class Definition\n     * ------------------------------------------------------------------------\n     */\n\n    var Modal = (function () {\n      function Modal(element, config) {\n        _classCallCheck(this, Modal);\n\n        this._config = this._getConfig(config);\n        this._element = element;\n        this._dialog = $(element).find(Selector.DIALOG)[0];\n        this._backdrop = null;\n        this._isShown = false;\n        this._isBodyOverflowing = false;\n        this._ignoreBackdropClick = false;\n        this._originalBodyPadding = 0;\n        this._scrollbarWidth = 0;\n      }\n\n      /**\n       * ------------------------------------------------------------------------\n       * Data Api implementation\n       * ------------------------------------------------------------------------\n       */\n\n      // getters\n\n      _createClass(Modal, [{\n        key: 'toggle',\n\n        // public\n\n        value: function toggle(relatedTarget) {\n          return this._isShown ? this.hide() : this.show(relatedTarget);\n        }\n      }, {\n        key: 'show',\n        value: function show(relatedTarget) {\n          var _this = this;\n\n          var showEvent = $.Event(Event.SHOW, {\n            relatedTarget: relatedTarget\n          });\n\n          $(this._element).trigger(showEvent);\n\n          if (this._isShown || showEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          this._isShown = true;\n\n          this._checkScrollbar();\n          this._setScrollbar();\n\n          $(document.body).addClass(ClassName.OPEN);\n\n          this._setEscapeEvent();\n          this._setResizeEvent();\n\n          $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, $.proxy(this.hide, this));\n\n          $(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {\n            $(_this._element).one(Event.MOUSEUP_DISMISS, function (event) {\n              if ($(event.target).is(_this._element)) {\n                _this._ignoreBackdropClick = true;\n              }\n            });\n          });\n\n          this._showBackdrop($.proxy(this._showElement, this, relatedTarget));\n        }\n      }, {\n        key: 'hide',\n        value: function hide(event) {\n          if (event) {\n            event.preventDefault();\n          }\n\n          var hideEvent = $.Event(Event.HIDE);\n\n          $(this._element).trigger(hideEvent);\n\n          if (!this._isShown || hideEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          this._isShown = false;\n\n          this._setEscapeEvent();\n          this._setResizeEvent();\n\n          $(document).off(Event.FOCUSIN);\n\n          $(this._element).removeClass(ClassName.IN);\n\n          $(this._element).off(Event.CLICK_DISMISS);\n          $(this._dialog).off(Event.MOUSEDOWN_DISMISS);\n\n          if (_Util['default'].supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {\n\n            $(this._element).one(_Util['default'].TRANSITION_END, $.proxy(this._hideModal, this)).emulateTransitionEnd(TRANSITION_DURATION);\n          } else {\n            this._hideModal();\n          }\n        }\n      }, {\n        key: 'dispose',\n        value: function dispose() {\n          $.removeData(this._element, DATA_KEY);\n\n          $(window).off(EVENT_KEY);\n          $(document).off(EVENT_KEY);\n          $(this._element).off(EVENT_KEY);\n          $(this._backdrop).off(EVENT_KEY);\n\n          this._config = null;\n          this._element = null;\n          this._dialog = null;\n          this._backdrop = null;\n          this._isShown = null;\n          this._isBodyOverflowing = null;\n          this._ignoreBackdropClick = null;\n          this._originalBodyPadding = null;\n          this._scrollbarWidth = null;\n        }\n\n        // private\n\n      }, {\n        key: '_getConfig',\n        value: function _getConfig(config) {\n          config = $.extend({}, Default, config);\n          _Util['default'].typeCheckConfig(NAME, config, DefaultType);\n          return config;\n        }\n      }, {\n        key: '_showElement',\n        value: function _showElement(relatedTarget) {\n          var _this2 = this;\n\n          var transition = _Util['default'].supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);\n\n          if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n            // don't move modals dom position\n            document.body.appendChild(this._element);\n          }\n\n          this._element.style.display = 'block';\n          this._element.scrollTop = 0;\n\n          if (transition) {\n            _Util['default'].reflow(this._element);\n          }\n\n          $(this._element).addClass(ClassName.IN);\n\n          if (this._config.focus) {\n            this._enforceFocus();\n          }\n\n          var shownEvent = $.Event(Event.SHOWN, {\n            relatedTarget: relatedTarget\n          });\n\n          var transitionComplete = function transitionComplete() {\n            if (_this2._config.focus) {\n              _this2._element.focus();\n            }\n            $(_this2._element).trigger(shownEvent);\n          };\n\n          if (transition) {\n            $(this._dialog).one(_Util['default'].TRANSITION_END, transitionComplete).emulateTransitionEnd(TRANSITION_DURATION);\n          } else {\n            transitionComplete();\n          }\n        }\n      }, {\n        key: '_enforceFocus',\n        value: function _enforceFocus() {\n          var _this3 = this;\n\n          $(document).off(Event.FOCUSIN) // guard against infinite focus loop\n          .on(Event.FOCUSIN, function (event) {\n            if (_this3._element !== event.target && !$(_this3._element).has(event.target).length) {\n              _this3._element.focus();\n            }\n          });\n        }\n      }, {\n        key: '_setEscapeEvent',\n        value: function _setEscapeEvent() {\n          var _this4 = this;\n\n          if (this._isShown && this._config.keyboard) {\n            $(this._element).on(Event.KEYDOWN_DISMISS, function (event) {\n              if (event.which === 27) {\n                _this4.hide();\n              }\n            });\n          } else if (!this._isShown) {\n            $(this._element).off(Event.KEYDOWN_DISMISS);\n          }\n        }\n      }, {\n        key: '_setResizeEvent',\n        value: function _setResizeEvent() {\n          if (this._isShown) {\n            $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this));\n          } else {\n            $(window).off(Event.RESIZE);\n          }\n        }\n      }, {\n        key: '_hideModal',\n        value: function _hideModal() {\n          var _this5 = this;\n\n          this._element.style.display = 'none';\n          this._showBackdrop(function () {\n            $(document.body).removeClass(ClassName.OPEN);\n            _this5._resetAdjustments();\n            _this5._resetScrollbar();\n            $(_this5._element).trigger(Event.HIDDEN);\n          });\n        }\n      }, {\n        key: '_removeBackdrop',\n        value: function _removeBackdrop() {\n          if (this._backdrop) {\n            $(this._backdrop).remove();\n            this._backdrop = null;\n          }\n        }\n      }, {\n        key: '_showBackdrop',\n        value: function _showBackdrop(callback) {\n          var _this6 = this;\n\n          var animate = $(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';\n\n          if (this._isShown && this._config.backdrop) {\n            var doAnimate = _Util['default'].supportsTransitionEnd() && animate;\n\n            this._backdrop = document.createElement('div');\n            this._backdrop.className = ClassName.BACKDROP;\n\n            if (animate) {\n              $(this._backdrop).addClass(animate);\n            }\n\n            $(this._backdrop).appendTo(document.body);\n\n            $(this._element).on(Event.CLICK_DISMISS, function (event) {\n              if (_this6._ignoreBackdropClick) {\n                _this6._ignoreBackdropClick = false;\n                return;\n              }\n              if (event.target !== event.currentTarget) {\n                return;\n              }\n              if (_this6._config.backdrop === 'static') {\n                _this6._element.focus();\n              } else {\n                _this6.hide();\n              }\n            });\n\n            if (doAnimate) {\n              _Util['default'].reflow(this._backdrop);\n            }\n\n            $(this._backdrop).addClass(ClassName.IN);\n\n            if (!callback) {\n              return;\n            }\n\n            if (!doAnimate) {\n              callback();\n              return;\n            }\n\n            $(this._backdrop).one(_Util['default'].TRANSITION_END, callback).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);\n          } else if (!this._isShown && this._backdrop) {\n            $(this._backdrop).removeClass(ClassName.IN);\n\n            var callbackRemove = function callbackRemove() {\n              _this6._removeBackdrop();\n              if (callback) {\n                callback();\n              }\n            };\n\n            if (_Util['default'].supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {\n              $(this._backdrop).one(_Util['default'].TRANSITION_END, callbackRemove).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);\n            } else {\n              callbackRemove();\n            }\n          } else if (callback) {\n            callback();\n          }\n        }\n\n        // ----------------------------------------------------------------------\n        // the following methods are used to handle overflowing modals\n        // todo (fat): these should probably be refactored out of modal.js\n        // ----------------------------------------------------------------------\n\n      }, {\n        key: '_handleUpdate',\n        value: function _handleUpdate() {\n          this._adjustDialog();\n        }\n      }, {\n        key: '_adjustDialog',\n        value: function _adjustDialog() {\n          var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n\n          if (!this._isBodyOverflowing && isModalOverflowing) {\n            this._element.style.paddingLeft = this._scrollbarWidth + 'px';\n          }\n\n          if (this._isBodyOverflowing && !isModalOverflowing) {\n            this._element.style.paddingRight = this._scrollbarWidth + 'px~';\n          }\n        }\n      }, {\n        key: '_resetAdjustments',\n        value: function _resetAdjustments() {\n          this._element.style.paddingLeft = '';\n          this._element.style.paddingRight = '';\n        }\n      }, {\n        key: '_checkScrollbar',\n        value: function _checkScrollbar() {\n          var fullWindowWidth = window.innerWidth;\n          if (!fullWindowWidth) {\n            // workaround for missing window.innerWidth in IE8\n            var documentElementRect = document.documentElement.getBoundingClientRect();\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n          }\n          this._isBodyOverflowing = document.body.clientWidth < fullWindowWidth;\n          this._scrollbarWidth = this._getScrollbarWidth();\n        }\n      }, {\n        key: '_setScrollbar',\n        value: function _setScrollbar() {\n          var bodyPadding = parseInt($(Selector.FIXED_CONTENT).css('padding-right') || 0, 10);\n\n          this._originalBodyPadding = document.body.style.paddingRight || '';\n\n          if (this._isBodyOverflowing) {\n            document.body.style.paddingRight = bodyPadding + this._scrollbarWidth + 'px';\n          }\n        }\n      }, {\n        key: '_resetScrollbar',\n        value: function _resetScrollbar() {\n          document.body.style.paddingRight = this._originalBodyPadding;\n        }\n      }, {\n        key: '_getScrollbarWidth',\n        value: function _getScrollbarWidth() {\n          // thx d.walsh\n          var scrollDiv = document.createElement('div');\n          scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\n          document.body.appendChild(scrollDiv);\n          var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n          document.body.removeChild(scrollDiv);\n          return scrollbarWidth;\n        }\n\n        // static\n\n      }], [{\n        key: '_jQueryInterface',\n        value: function _jQueryInterface(config, relatedTarget) {\n          return this.each(function () {\n            var data = $(this).data(DATA_KEY);\n            var _config = $.extend({}, Modal.Default, $(this).data(), typeof config === 'object' && config);\n\n            if (!data) {\n              data = new Modal(this, _config);\n              $(this).data(DATA_KEY, data);\n            }\n\n            if (typeof config === 'string') {\n              if (data[config] === undefined) {\n                throw new Error('No method named \"' + config + '\"');\n              }\n              data[config](relatedTarget);\n            } else if (_config.show) {\n              data.show(relatedTarget);\n            }\n          });\n        }\n      }, {\n        key: 'VERSION',\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: 'Default',\n        get: function get() {\n          return Default;\n        }\n      }]);\n\n      return Modal;\n    })();\n\n    $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\n      var _this7 = this;\n\n      var target = undefined;\n      var selector = _Util['default'].getSelectorFromElement(this);\n\n      if (selector) {\n        target = $(selector)[0];\n      }\n\n      var config = $(target).data(DATA_KEY) ? 'toggle' : $.extend({}, $(target).data(), $(this).data());\n\n      if (this.tagName === 'A') {\n        event.preventDefault();\n      }\n\n      var $target = $(target).one(Event.SHOW, function (showEvent) {\n        if (showEvent.isDefaultPrevented()) {\n          // only register focus restorer if modal will actually get shown\n          return;\n        }\n\n        $target.one(Event.HIDDEN, function () {\n          if ($(_this7).is(':visible')) {\n            _this7.focus();\n          }\n        });\n      });\n\n      Modal._jQueryInterface.call($(target), config, this);\n    });\n\n    /**\n     * ------------------------------------------------------------------------\n     * jQuery\n     * ------------------------------------------------------------------------\n     */\n\n    $.fn[NAME] = Modal._jQueryInterface;\n    $.fn[NAME].Constructor = Modal;\n    $.fn[NAME].noConflict = function () {\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Modal._jQueryInterface;\n    };\n\n    return Modal;\n  })(jQuery);\n\n  module.exports = Modal;\n});\n\n},{\"./util\":8}],6:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module', './tooltip'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module, require('./tooltip'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod, global.Tooltip);\n    global.popover = mod.exports;\n  }\n})(this, function (exports, module, _tooltip) {\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var _Tooltip2 = _interopRequireDefault(_tooltip);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.0.0-alpha.2): popover.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Popover = (function ($) {\n\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n\n    var NAME = 'popover';\n    var VERSION = '4.0.0-alpha';\n    var DATA_KEY = 'bs.popover';\n    var EVENT_KEY = '.' + DATA_KEY;\n    var JQUERY_NO_CONFLICT = $.fn[NAME];\n\n    var Default = $.extend({}, _Tooltip2['default'].Default, {\n      placement: 'right',\n      trigger: 'click',\n      content: '',\n      template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"popover-arrow\"></div>' + '<h3 class=\"popover-title\"></h3>' + '<div class=\"popover-content\"></div></div>'\n    });\n\n    var DefaultType = $.extend({}, _Tooltip2['default'].DefaultType, {\n      content: '(string|element|function)'\n    });\n\n    var ClassName = {\n      FADE: 'fade',\n      IN: 'in'\n    };\n\n    var Selector = {\n      TITLE: '.popover-title',\n      CONTENT: '.popover-content',\n      ARROW: '.popover-arrow'\n    };\n\n    var Event = {\n      HIDE: 'hide' + EVENT_KEY,\n      HIDDEN: 'hidden' + EVENT_KEY,\n      SHOW: 'show' + EVENT_KEY,\n      SHOWN: 'shown' + EVENT_KEY,\n      INSERTED: 'inserted' + EVENT_KEY,\n      CLICK: 'click' + EVENT_KEY,\n      FOCUSIN: 'focusin' + EVENT_KEY,\n      FOCUSOUT: 'focusout' + EVENT_KEY,\n      MOUSEENTER: 'mouseenter' + EVENT_KEY,\n      MOUSELEAVE: 'mouseleave' + EVENT_KEY\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * Class Definition\n     * ------------------------------------------------------------------------\n     */\n\n    var Popover = (function (_Tooltip) {\n      _inherits(Popover, _Tooltip);\n\n      function Popover() {\n        _classCallCheck(this, Popover);\n\n        _get(Object.getPrototypeOf(Popover.prototype), 'constructor', this).apply(this, arguments);\n      }\n\n      /**\n       * ------------------------------------------------------------------------\n       * jQuery\n       * ------------------------------------------------------------------------\n       */\n\n      _createClass(Popover, [{\n        key: 'isWithContent',\n\n        // overrides\n\n        value: function isWithContent() {\n          return this.getTitle() || this._getContent();\n        }\n      }, {\n        key: 'getTipElement',\n        value: function getTipElement() {\n          return this.tip = this.tip || $(this.config.template)[0];\n        }\n      }, {\n        key: 'setContent',\n        value: function setContent() {\n          var $tip = $(this.getTipElement());\n\n          // we use append for html objects to maintain js events\n          this.setElementContent($tip.find(Selector.TITLE), this.getTitle());\n          this.setElementContent($tip.find(Selector.CONTENT), this._getContent());\n\n          $tip.removeClass(ClassName.FADE).removeClass(ClassName.IN);\n\n          this.cleanupTether();\n        }\n\n        // private\n\n      }, {\n        key: '_getContent',\n        value: function _getContent() {\n          return this.element.getAttribute('data-content') || (typeof this.config.content === 'function' ? this.config.content.call(this.element) : this.config.content);\n        }\n\n        // static\n\n      }], [{\n        key: '_jQueryInterface',\n        value: function _jQueryInterface(config) {\n          return this.each(function () {\n            var data = $(this).data(DATA_KEY);\n            var _config = typeof config === 'object' ? config : null;\n\n            if (!data && /destroy|hide/.test(config)) {\n              return;\n            }\n\n            if (!data) {\n              data = new Popover(this, _config);\n              $(this).data(DATA_KEY, data);\n            }\n\n            if (typeof config === 'string') {\n              if (data[config] === undefined) {\n                throw new Error('No method named \"' + config + '\"');\n              }\n              data[config]();\n            }\n          });\n        }\n      }, {\n        key: 'VERSION',\n\n        // getters\n\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: 'Default',\n        get: function get() {\n          return Default;\n        }\n      }, {\n        key: 'NAME',\n        get: function get() {\n          return NAME;\n        }\n      }, {\n        key: 'DATA_KEY',\n        get: function get() {\n          return DATA_KEY;\n        }\n      }, {\n        key: 'Event',\n        get: function get() {\n          return Event;\n        }\n      }, {\n        key: 'EVENT_KEY',\n        get: function get() {\n          return EVENT_KEY;\n        }\n      }, {\n        key: 'DefaultType',\n        get: function get() {\n          return DefaultType;\n        }\n      }]);\n\n      return Popover;\n    })(_Tooltip2['default']);\n\n    $.fn[NAME] = Popover._jQueryInterface;\n    $.fn[NAME].Constructor = Popover;\n    $.fn[NAME].noConflict = function () {\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Popover._jQueryInterface;\n    };\n\n    return Popover;\n  })(jQuery);\n\n  module.exports = Popover;\n});\n\n},{\"./tooltip\":7}],7:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module', './util'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module, require('./util'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod, global.Util);\n    global.tooltip = mod.exports;\n  }\n})(this, function (exports, module, _util) {\n  /* global Tether */\n\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var _Util = _interopRequireDefault(_util);\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.0.0-alpha.2): tooltip.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  var Tooltip = (function ($) {\n\n    /**\n     * Check for Tether dependency\n     * Tether - http://github.hubspot.com/tether/\n     */\n    if (window.Tether === undefined) {\n      throw new Error('Bootstrap tooltips require Tether (http://github.hubspot.com/tether/)');\n    }\n\n    /**\n     * ------------------------------------------------------------------------\n     * Constants\n     * ------------------------------------------------------------------------\n     */\n\n    var NAME = 'tooltip';\n    var VERSION = '4.0.0-alpha';\n    var DATA_KEY = 'bs.tooltip';\n    var EVENT_KEY = '.' + DATA_KEY;\n    var JQUERY_NO_CONFLICT = $.fn[NAME];\n    var TRANSITION_DURATION = 150;\n    var CLASS_PREFIX = 'bs-tether';\n\n    var Default = {\n      animation: true,\n      template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"tooltip-arrow\"></div>' + '<div class=\"tooltip-inner\"></div></div>',\n      trigger: 'hover focus',\n      title: '',\n      delay: 0,\n      html: false,\n      selector: false,\n      placement: 'top',\n      offset: '0 0',\n      constraints: []\n    };\n\n    var DefaultType = {\n      animation: 'boolean',\n      template: 'string',\n      title: '(string|element|function)',\n      trigger: 'string',\n      delay: '(number|object)',\n      html: 'boolean',\n      selector: '(string|boolean)',\n      placement: '(string|function)',\n      offset: 'string',\n      constraints: 'array'\n    };\n\n    var AttachmentMap = {\n      TOP: 'bottom center',\n      RIGHT: 'middle left',\n      BOTTOM: 'top center',\n      LEFT: 'middle right'\n    };\n\n    var HoverState = {\n      IN: 'in',\n      OUT: 'out'\n    };\n\n    var Event = {\n      HIDE: 'hide' + EVENT_KEY,\n      HIDDEN: 'hidden' + EVENT_KEY,\n      SHOW: 'show' + EVENT_KEY,\n      SHOWN: 'shown' + EVENT_KEY,\n      INSERTED: 'inserted' + EVENT_KEY,\n      CLICK: 'click' + EVENT_KEY,\n      FOCUSIN: 'focusin' + EVENT_KEY,\n      FOCUSOUT: 'focusout' + EVENT_KEY,\n      MOUSEENTER: 'mouseenter' + EVENT_KEY,\n      MOUSELEAVE: 'mouseleave' + EVENT_KEY\n    };\n\n    var ClassName = {\n      FADE: 'fade',\n      IN: 'in'\n    };\n\n    var Selector = {\n      TOOLTIP: '.tooltip',\n      TOOLTIP_INNER: '.tooltip-inner'\n    };\n\n    var TetherClass = {\n      element: false,\n      enabled: false\n    };\n\n    var Trigger = {\n      HOVER: 'hover',\n      FOCUS: 'focus',\n      CLICK: 'click',\n      MANUAL: 'manual'\n    };\n\n    /**\n     * ------------------------------------------------------------------------\n     * Class Definition\n     * ------------------------------------------------------------------------\n     */\n\n    var Tooltip = (function () {\n      function Tooltip(element, config) {\n        _classCallCheck(this, Tooltip);\n\n        // private\n        this._isEnabled = true;\n        this._timeout = 0;\n        this._hoverState = '';\n        this._activeTrigger = {};\n        this._tether = null;\n\n        // protected\n        this.element = element;\n        this.config = this._getConfig(config);\n        this.tip = null;\n\n        this._setListeners();\n      }\n\n      /**\n       * ------------------------------------------------------------------------\n       * jQuery\n       * ------------------------------------------------------------------------\n       */\n\n      // getters\n\n      _createClass(Tooltip, [{\n        key: 'enable',\n\n        // public\n\n        value: function enable() {\n          this._isEnabled = true;\n        }\n      }, {\n        key: 'disable',\n        value: function disable() {\n          this._isEnabled = false;\n        }\n      }, {\n        key: 'toggleEnabled',\n        value: function toggleEnabled() {\n          this._isEnabled = !this._isEnabled;\n        }\n      }, {\n        key: 'toggle',\n        value: function toggle(event) {\n          if (event) {\n            var dataKey = this.constructor.DATA_KEY;\n            var context = $(event.currentTarget).data(dataKey);\n\n            if (!context) {\n              context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n              $(event.currentTarget).data(dataKey, context);\n            }\n\n            context._activeTrigger.click = !context._activeTrigger.click;\n\n            if (context._isWithActiveTrigger()) {\n              context._enter(null, context);\n            } else {\n              context._leave(null, context);\n            }\n          } else {\n\n            if ($(this.getTipElement()).hasClass(ClassName.IN)) {\n              this._leave(null, this);\n              return;\n            }\n\n            this._enter(null, this);\n          }\n        }\n      }, {\n        key: 'dispose',\n        value: function dispose() {\n          clearTimeout(this._timeout);\n\n          this.cleanupTether();\n\n          $.removeData(this.element, this.constructor.DATA_KEY);\n\n          $(this.element).off(this.constructor.EVENT_KEY);\n\n          if (this.tip) {\n            $(this.tip).remove();\n          }\n\n          this._isEnabled = null;\n          this._timeout = null;\n          this._hoverState = null;\n          this._activeTrigger = null;\n          this._tether = null;\n\n          this.element = null;\n          this.config = null;\n          this.tip = null;\n        }\n      }, {\n        key: 'show',\n        value: function show() {\n          var _this = this;\n\n          var showEvent = $.Event(this.constructor.Event.SHOW);\n\n          if (this.isWithContent() && this._isEnabled) {\n            $(this.element).trigger(showEvent);\n\n            var isInTheDom = $.contains(this.element.ownerDocument.documentElement, this.element);\n\n            if (showEvent.isDefaultPrevented() || !isInTheDom) {\n              return;\n            }\n\n            var tip = this.getTipElement();\n            var tipId = _Util['default'].getUID(this.constructor.NAME);\n\n            tip.setAttribute('id', tipId);\n            this.element.setAttribute('aria-describedby', tipId);\n\n            this.setContent();\n\n            if (this.config.animation) {\n              $(tip).addClass(ClassName.FADE);\n            }\n\n            var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\n\n            var attachment = this._getAttachment(placement);\n\n            $(tip).data(this.constructor.DATA_KEY, this).appendTo(document.body);\n\n            $(this.element).trigger(this.constructor.Event.INSERTED);\n\n            this._tether = new Tether({\n              attachment: attachment,\n              element: tip,\n              target: this.element,\n              classes: TetherClass,\n              classPrefix: CLASS_PREFIX,\n              offset: this.config.offset,\n              constraints: this.config.constraints,\n              addTargetClasses: false\n            });\n\n            _Util['default'].reflow(tip);\n            this._tether.position();\n\n            $(tip).addClass(ClassName.IN);\n\n            var complete = function complete() {\n              var prevHoverState = _this._hoverState;\n              _this._hoverState = null;\n\n              $(_this.element).trigger(_this.constructor.Event.SHOWN);\n\n              if (prevHoverState === HoverState.OUT) {\n                _this._leave(null, _this);\n              }\n            };\n\n            if (_Util['default'].supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\n              $(this.tip).one(_Util['default'].TRANSITION_END, complete).emulateTransitionEnd(Tooltip._TRANSITION_DURATION);\n              return;\n            }\n\n            complete();\n          }\n        }\n      }, {\n        key: 'hide',\n        value: function hide(callback) {\n          var _this2 = this;\n\n          var tip = this.getTipElement();\n          var hideEvent = $.Event(this.constructor.Event.HIDE);\n          var complete = function complete() {\n            if (_this2._hoverState !== HoverState.IN && tip.parentNode) {\n              tip.parentNode.removeChild(tip);\n            }\n\n            _this2.element.removeAttribute('aria-describedby');\n            $(_this2.element).trigger(_this2.constructor.Event.HIDDEN);\n            _this2.cleanupTether();\n\n            if (callback) {\n              callback();\n            }\n          };\n\n          $(this.element).trigger(hideEvent);\n\n          if (hideEvent.isDefaultPrevented()) {\n            return;\n          }\n\n          $(tip).removeClass(ClassName.IN);\n\n          if (_Util['default'].supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\n\n            $(tip).one(_Util['default'].TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\n          } else {\n            complete();\n          }\n\n          this._hoverState = '';\n        }\n\n        // protected\n\n      }, {\n        key: 'isWithContent',\n        value: function isWithContent() {\n          return Boolean(this.getTitle());\n        }\n      }, {\n        key: 'getTipElement',\n        value: function getTipElement() {\n          return this.tip = this.tip || $(this.config.template)[0];\n        }\n      }, {\n        key: 'setContent',\n        value: function setContent() {\n          var $tip = $(this.getTipElement());\n\n          this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());\n\n          $tip.removeClass(ClassName.FADE).removeClass(ClassName.IN);\n\n          this.cleanupTether();\n        }\n      }, {\n        key: 'setElementContent',\n        value: function setElementContent($element, content) {\n          var html = this.config.html;\n          if (typeof content === 'object' && (content.nodeType || content.jquery)) {\n            // content is a DOM node or a jQuery\n            if (html) {\n              if (!$(content).parent().is($element)) {\n                $element.empty().append(content);\n              }\n            } else {\n              $element.text($(content).text());\n            }\n          } else {\n            $element[html ? 'html' : 'text'](content);\n          }\n        }\n      }, {\n        key: 'getTitle',\n        value: function getTitle() {\n          var title = this.element.getAttribute('data-original-title');\n\n          if (!title) {\n            title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\n          }\n\n          return title;\n        }\n      }, {\n        key: 'cleanupTether',\n        value: function cleanupTether() {\n          if (this._tether) {\n            this._tether.destroy();\n          }\n        }\n\n        // private\n\n      }, {\n        key: '_getAttachment',\n        value: function _getAttachment(placement) {\n          return AttachmentMap[placement.toUpperCase()];\n        }\n      }, {\n        key: '_setListeners',\n        value: function _setListeners() {\n          var _this3 = this;\n\n          var triggers = this.config.trigger.split(' ');\n\n          triggers.forEach(function (trigger) {\n            if (trigger === 'click') {\n              $(_this3.element).on(_this3.constructor.Event.CLICK, _this3.config.selector, $.proxy(_this3.toggle, _this3));\n            } else if (trigger !== Trigger.MANUAL) {\n              var eventIn = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSEENTER : _this3.constructor.Event.FOCUSIN;\n              var eventOut = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSELEAVE : _this3.constructor.Event.FOCUSOUT;\n\n              $(_this3.element).on(eventIn, _this3.config.selector, $.proxy(_this3._enter, _this3)).on(eventOut, _this3.config.selector, $.proxy(_this3._leave, _this3));\n            }\n          });\n\n          if (this.config.selector) {\n            this.config = $.extend({}, this.config, {\n              trigger: 'manual',\n              selector: ''\n            });\n          } else {\n            this._fixTitle();\n          }\n        }\n      }, {\n        key: '_fixTitle',\n        value: function _fixTitle() {\n          var titleType = typeof this.element.getAttribute('data-original-title');\n          if (this.element.getAttribute('title') || titleType !== 'string') {\n            this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\n            this.element.setAttribute('title', '');\n          }\n        }\n      }, {\n        key: '_enter',\n        value: function _enter(event, context) {\n          var dataKey = this.constructor.DATA_KEY;\n\n          context = context || $(event.currentTarget).data(dataKey);\n\n          if (!context) {\n            context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n            $(event.currentTarget).data(dataKey, context);\n          }\n\n          if (event) {\n            context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\n          }\n\n          if ($(context.getTipElement()).hasClass(ClassName.IN) || context._hoverState === HoverState.IN) {\n            context._hoverState = HoverState.IN;\n            return;\n          }\n\n          clearTimeout(context._timeout);\n\n          context._hoverState = HoverState.IN;\n\n          if (!context.config.delay || !context.config.delay.show) {\n            context.show();\n            return;\n          }\n\n          context._timeout = setTimeout(function () {\n            if (context._hoverState === HoverState.IN) {\n              context.show();\n            }\n          }, context.config.delay.show);\n        }\n      }, {\n        key: '_leave',\n        value: function _leave(event, context) {\n          var dataKey = this.constructor.DATA_KEY;\n\n          context = context || $(event.currentTarget).data(dataKey);\n\n          if (!context) {\n            context = new this.constructor(event.currentTarget, this._getDelegateConfig());\n            $(event.currentTarget).data(dataKey, context);\n          }\n\n          if (event) {\n            context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\n          }\n\n          if (context._isWithActiveTrigger()) {\n            return;\n          }\n\n          clearTimeout(context._timeout);\n\n          context._hoverState = HoverState.OUT;\n\n          if (!context.config.delay || !context.config.delay.hide) {\n            context.hide();\n            return;\n          }\n\n          context._timeout = setTimeout(function () {\n            if (context._hoverState === HoverState.OUT) {\n              context.hide();\n            }\n          }, context.config.delay.hide);\n        }\n      }, {\n        key: '_isWithActiveTrigger',\n        value: function _isWithActiveTrigger() {\n          for (var trigger in this._activeTrigger) {\n            if (this._activeTrigger[trigger]) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n      }, {\n        key: '_getConfig',\n        value: function _getConfig(config) {\n          config = $.extend({}, this.constructor.Default, $(this.element).data(), config);\n\n          if (config.delay && typeof config.delay === 'number') {\n            config.delay = {\n              show: config.delay,\n              hide: config.delay\n            };\n          }\n\n          _Util['default'].typeCheckConfig(NAME, config, this.constructor.DefaultType);\n\n          return config;\n        }\n      }, {\n        key: '_getDelegateConfig',\n        value: function _getDelegateConfig() {\n          var config = {};\n\n          if (this.config) {\n            for (var key in this.config) {\n              if (this.constructor.Default[key] !== this.config[key]) {\n                config[key] = this.config[key];\n              }\n            }\n          }\n\n          return config;\n        }\n\n        // static\n\n      }], [{\n        key: '_jQueryInterface',\n        value: function _jQueryInterface(config) {\n          return this.each(function () {\n            var data = $(this).data(DATA_KEY);\n            var _config = typeof config === 'object' ? config : null;\n\n            if (!data && /destroy|hide/.test(config)) {\n              return;\n            }\n\n            if (!data) {\n              data = new Tooltip(this, _config);\n              $(this).data(DATA_KEY, data);\n            }\n\n            if (typeof config === 'string') {\n              if (data[config] === undefined) {\n                throw new Error('No method named \"' + config + '\"');\n              }\n              data[config]();\n            }\n          });\n        }\n      }, {\n        key: 'VERSION',\n        get: function get() {\n          return VERSION;\n        }\n      }, {\n        key: 'Default',\n        get: function get() {\n          return Default;\n        }\n      }, {\n        key: 'NAME',\n        get: function get() {\n          return NAME;\n        }\n      }, {\n        key: 'DATA_KEY',\n        get: function get() {\n          return DATA_KEY;\n        }\n      }, {\n        key: 'Event',\n        get: function get() {\n          return Event;\n        }\n      }, {\n        key: 'EVENT_KEY',\n        get: function get() {\n          return EVENT_KEY;\n        }\n      }, {\n        key: 'DefaultType',\n        get: function get() {\n          return DefaultType;\n        }\n      }]);\n\n      return Tooltip;\n    })();\n\n    $.fn[NAME] = Tooltip._jQueryInterface;\n    $.fn[NAME].Constructor = Tooltip;\n    $.fn[NAME].noConflict = function () {\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\n      return Tooltip._jQueryInterface;\n    };\n\n    return Tooltip;\n  })(jQuery);\n\n  module.exports = Tooltip;\n});\n\n},{\"./util\":8}],8:[function(require,module,exports){\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod);\n    global.util = mod.exports;\n  }\n})(this, function (exports, module) {\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v4.0.0-alpha.2): util.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  'use strict';\n\n  var Util = (function ($) {\n\n    /**\n     * ------------------------------------------------------------------------\n     * Private TransitionEnd Helpers\n     * ------------------------------------------------------------------------\n     */\n\n    var transition = false;\n\n    var TransitionEndEvent = {\n      WebkitTransition: 'webkitTransitionEnd',\n      MozTransition: 'transitionend',\n      OTransition: 'oTransitionEnd otransitionend',\n      transition: 'transitionend'\n    };\n\n    // shoutout AngusCroll (https://goo.gl/pxwQGp)\n    function toType(obj) {\n      return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n    }\n\n    function isElement(obj) {\n      return (obj[0] || obj).nodeType;\n    }\n\n    function getSpecialTransitionEndEvent() {\n      return {\n        bindType: transition.end,\n        delegateType: transition.end,\n        handle: function handle(event) {\n          if ($(event.target).is(this)) {\n            return event.handleObj.handler.apply(this, arguments);\n          }\n        }\n      };\n    }\n\n    function transitionEndTest() {\n      if (window.QUnit) {\n        return false;\n      }\n\n      var el = document.createElement('bootstrap');\n\n      for (var _name in TransitionEndEvent) {\n        if (el.style[_name] !== undefined) {\n          return { end: TransitionEndEvent[_name] };\n        }\n      }\n\n      return false;\n    }\n\n    function transitionEndEmulator(duration) {\n      var _this = this;\n\n      var called = false;\n\n      $(this).one(Util.TRANSITION_END, function () {\n        called = true;\n      });\n\n      setTimeout(function () {\n        if (!called) {\n          Util.triggerTransitionEnd(_this);\n        }\n      }, duration);\n\n      return this;\n    }\n\n    function setTransitionEndSupport() {\n      transition = transitionEndTest();\n\n      $.fn.emulateTransitionEnd = transitionEndEmulator;\n\n      if (Util.supportsTransitionEnd()) {\n        $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------\n     * Public Util Api\n     * --------------------------------------------------------------------------\n     */\n\n    var Util = {\n\n      TRANSITION_END: 'bsTransitionEnd',\n\n      getUID: function getUID(prefix) {\n        do {\n          prefix += ~ ~(Math.random() * 1000000); // \"~~\" acts like a faster Math.floor() here\n        } while (document.getElementById(prefix));\n        return prefix;\n      },\n\n      getSelectorFromElement: function getSelectorFromElement(element) {\n        var selector = element.getAttribute('data-target');\n\n        if (!selector) {\n          selector = element.getAttribute('href') || '';\n          selector = /^#[a-z]/i.test(selector) ? selector : null;\n        }\n\n        return selector;\n      },\n\n      reflow: function reflow(element) {\n        new Function('bs', 'return bs')(element.offsetHeight);\n      },\n\n      triggerTransitionEnd: function triggerTransitionEnd(element) {\n        $(element).trigger(transition.end);\n      },\n\n      supportsTransitionEnd: function supportsTransitionEnd() {\n        return Boolean(transition);\n      },\n\n      typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\n        for (var property in configTypes) {\n          if (configTypes.hasOwnProperty(property)) {\n            var expectedTypes = configTypes[property];\n            var value = config[property];\n            var valueType = undefined;\n\n            if (value && isElement(value)) {\n              valueType = 'element';\n            } else {\n              valueType = toType(value);\n            }\n\n            if (!new RegExp(expectedTypes).test(valueType)) {\n              throw new Error(componentName.toUpperCase() + ': ' + ('Option \"' + property + '\" provided type \"' + valueType + '\" ') + ('but expected type \"' + expectedTypes + '\".'));\n            }\n          }\n        }\n      }\n    };\n\n    setTransitionEndSupport();\n\n    return Util;\n  })(jQuery);\n\n  module.exports = Util;\n});\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\n//Utils\nrequire('../../../node_modules/bootstrap/dist/js/umd/util.js');\n\n//Alert\nrequire('../../../node_modules/bootstrap/dist/js/umd/alert.js');\n\n//Button\nrequire('../../../node_modules/bootstrap/dist/js/umd/button.js');\n\n//Carousel\n//require('../../../node_modules/bootstrap/dist/js/umd/carousel.js');\n\n//Collapse\nrequire('../../../node_modules/bootstrap/dist/js/umd/collapse.js');\n\n//Dropdown\nrequire('../../../node_modules/bootstrap/dist/js/umd/dropdown.js');\n\n//Modal\nrequire('../../../node_modules/bootstrap/dist/js/umd/modal.js');\n\n//Scrollspy\n//require('../../../node_modules/bootstrap/dist/js/umd/scrollspy.js');\n\n//Tab\n//require('../../../node_modules/bootstrap/dist/js/umd/tab.js');\n\n//Tooltip\nrequire('../../../node_modules/bootstrap/dist/js/umd/tooltip.js');\n\n//Popover\nrequire('../../../node_modules/bootstrap/dist/js/umd/popover.js');\n\n},{\"../../../node_modules/bootstrap/dist/js/umd/alert.js\":1,\"../../../node_modules/bootstrap/dist/js/umd/button.js\":2,\"../../../node_modules/bootstrap/dist/js/umd/collapse.js\":3,\"../../../node_modules/bootstrap/dist/js/umd/dropdown.js\":4,\"../../../node_modules/bootstrap/dist/js/umd/modal.js\":5,\"../../../node_modules/bootstrap/dist/js/umd/popover.js\":6,\"../../../node_modules/bootstrap/dist/js/umd/tooltip.js\":7,\"../../../node_modules/bootstrap/dist/js/umd/util.js\":8}],10:[function(require,module,exports){\n'use strict';\n\nrequire('./bootstrap.js');\n\n},{\"./bootstrap.js\":9}]},{},[10]);\n"],"file":"main.js","sourceRoot":"/source/"}